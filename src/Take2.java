import BLogic.*;

import java.io.File;
import java.util.Map;
import java.util.HashMap;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JOptionPane;

import java.util.Collection;
import java.util.List;
import java.util.ArrayList;

//import java.awt.BorderLayout;
import java.util.*;
import java.awt.Component;
import java.io.File;
import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.net.URL;
import javax.media.Player;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.media.Manager;
import java.io.IOException;
import javax.media.NoPlayerException;
import javax.media.CannotRealizeException;
import javax.media.MediaLocator;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
//import java.io.FileNotFoundException;
//import org.xml.sax.SAXException;

//imports tika
/*import org.apache.tika.exception.TikaException;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.mp4.MP4Parser;
import org.apache.tika.sax.BodyContentHandler;*/

public class Take2 extends javax.swing.JFrame {
    private Model model=new Model();
    private Clip clip;
    private long clipTimePosition = 0;
    private HashMap<Integer,Playlist> lPlayList;
    //private Media m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15;
    //private Playlist playlist1;
    //private Utilizador user1;

    private int playlistPos = 0;
    private String idUtilizadorAtual="";
    private Utilizador userAtual;
    private Playlist playlistAtual;
    /*
    POR ISTO DEPOIS DE TER A PLAYLIST DE CADA UM COM AS MUSICAS NO PLAYER
    private HashMap teste = this.playlistAtual.getListaMediaPlaylist();
    private Collection<String> songList = this.teste.values();
    List<String> newList = new ArrayList<>(songList);
    String[] strarray = newList.toArray(new String[0]);
    */

    //private String[] playlistArray = new String[10];//= {"musica1 nome","musica2 nome","musica3 nome"};
    //private String[] musicasArray = new String[50];//= {"musica1 nome","musica2 nome","musica3 nome"};
    private Player playerAtual;
    private Utilizador user1;


    private String musicaAtual = "MÃºsica";
    private String artAtual = "Artista";
    private String catAtual = "Categoria";

    private Vector listData = new Vector();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        loginWindow = new javax.swing.JDialog();
        username_label = new javax.swing.JLabel();
        password_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userInput = new javax.swing.JTextField();
        passInput = new javax.swing.JPasswordField();
        backFromLogin = new javax.swing.JButton();
        menuAdm = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        playerAdmButton = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        backFromAdm = new javax.swing.JButton();
        criar_conta_button = new javax.swing.JLabel();
        initialWindow = new javax.swing.JFrame();
        loginButton = new javax.swing.JButton();
        welcome_title = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        entrarComoConvidado = new javax.swing.JButton();
        videoFrame = new javax.swing.JFrame();
        playVideo = new javax.swing.JButton();
        pauseVideo = new javax.swing.JButton();
        stopVideo = new javax.swing.JButton();
        altCategoria = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        catNova = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        playingGif1 = new javax.swing.JLabel();
        play = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        mediaList = new javax.swing.JList<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        playlistList = new javax.swing.JList<String>();
        termSessao = new javax.swing.JButton();
        nomeMusica = new javax.swing.JLabel();
        catName = new javax.swing.JLabel();
        artName = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        altCat = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        loginWindow.setTitle("Janela de Login");
        loginWindow.setLocation(new java.awt.Point(530, 200));
        loginWindow.setMinimumSize(new java.awt.Dimension(480, 380));

        username_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/user.png"))); // NOI18N

        password_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pass_pink.png"))); // NOI18N
        password_label.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("CMU Bright", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/mediaCenterGif.gif"))); // NOI18N

        passInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passInputActionPerformed(evt);
            }
        });
        passInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passInputKeyPressed(evt);
            }
        });

        backFromLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/back.png"))); // NOI18N
        backFromLogin.setBorderPainted(false);
        backFromLogin.setContentAreaFilled(false);
        backFromLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backFromLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginWindowLayout = new javax.swing.GroupLayout(loginWindow.getContentPane());
        loginWindow.getContentPane().setLayout(loginWindowLayout);
        loginWindowLayout.setHorizontalGroup(
                loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginWindowLayout.createSequentialGroup()
                                .addGroup(loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(loginWindowLayout.createSequentialGroup()
                                                .addComponent(backFromLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(loginWindowLayout.createSequentialGroup()
                                                .addGap(37, 37, 37)
                                                .addGroup(loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(username_label)
                                                        .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(passInput, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(43, 59, Short.MAX_VALUE))
        );
        loginWindowLayout.setVerticalGroup(
                loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginWindowLayout.createSequentialGroup()
                                .addGroup(loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(loginWindowLayout.createSequentialGroup()
                                                .addComponent(backFromLogin)
                                                .addGap(120, 120, 120))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginWindowLayout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(31, 31, 31)))
                                .addGroup(loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(username_label))
                                .addGap(39, 39, 39)
                                .addGroup(loginWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(passInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(password_label))
                                .addContainerGap(173, Short.MAX_VALUE))
        );

        menuAdm.setTitle("Menu Administrador");
        menuAdm.setLocation(new java.awt.Point(550, 180));
        menuAdm.setMinimumSize(new java.awt.Dimension(400, 480));
        menuAdm.setResizable(false);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/menu_adm.png"))); // NOI18N

        playerAdmButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/player_adm.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/logout_adm.png"))); // NOI18N

        backFromAdm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/back.png"))); // NOI18N
        backFromAdm.setBorderPainted(false);
        backFromAdm.setContentAreaFilled(false);
        backFromAdm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backFromAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromAdmActionPerformed(evt);
            }
        });

        criar_conta_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/criar_conta_adm_2.png"))); // NOI18N
        criar_conta_button.setText("Criar Conta");

        javax.swing.GroupLayout menuAdmLayout = new javax.swing.GroupLayout(menuAdm.getContentPane());
        menuAdm.getContentPane().setLayout(menuAdmLayout);
        menuAdmLayout.setHorizontalGroup(
                menuAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuAdmLayout.createSequentialGroup()
                                .addGap(0, 44, Short.MAX_VALUE)
                                .addGroup(menuAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuAdmLayout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(36, 36, 36))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuAdmLayout.createSequentialGroup()
                                                .addGroup(menuAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(playerAdmButton))
                                                .addGap(119, 119, 119))))
                        .addGroup(menuAdmLayout.createSequentialGroup()
                                .addGroup(menuAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(backFromAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(menuAdmLayout.createSequentialGroup()
                                                .addGap(104, 104, 104)
                                                .addComponent(criar_conta_button, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menuAdmLayout.setVerticalGroup(
                menuAdmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(menuAdmLayout.createSequentialGroup()
                                .addComponent(backFromAdm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(playerAdmButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(criar_conta_button)
                                .addContainerGap(27, Short.MAX_VALUE))
        );

        initialWindow.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        initialWindow.setAlwaysOnTop(true);
        initialWindow.setLocation(new java.awt.Point(540, 200));
        initialWindow.setMinimumSize(new java.awt.Dimension(440, 400));
        initialWindow.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                initialWindowWindowOpened(evt);
            }
        });

        loginButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/login_menu_2.png"))); // NOI18N
        loginButton.setBorderPainted(false);
        loginButton.setContentAreaFilled(false);
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setInheritsPopupMenu(true);
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loginButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                loginButtonMouseReleased(evt);
            }
        });
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        welcome_title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/welcome.png"))); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/adm_menu_2.png"))); // NOI18N
        jButton1.setText("jButton1");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        entrarComoConvidado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/convidado_menu.png"))); // NOI18N
        entrarComoConvidado.setText("jButton2");
        entrarComoConvidado.setBorderPainted(false);
        entrarComoConvidado.setContentAreaFilled(false);
        entrarComoConvidado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        entrarComoConvidado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarComoConvidadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout initialWindowLayout = new javax.swing.GroupLayout(initialWindow.getContentPane());
        initialWindow.getContentPane().setLayout(initialWindowLayout);
        initialWindowLayout.setHorizontalGroup(
                initialWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(initialWindowLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(initialWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(initialWindowLayout.createSequentialGroup()
                                                .addComponent(welcome_title, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(40, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, initialWindowLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(initialWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(initialWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, initialWindowLayout.createSequentialGroup()
                                                                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(129, 129, 129))
                                                                .addGroup(initialWindowLayout.createSequentialGroup()
                                                                        .addComponent(entrarComoConvidado, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addContainerGap()))))))
        );
        initialWindowLayout.setVerticalGroup(
                initialWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(initialWindowLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(welcome_title, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(entrarComoConvidado)
                                .addContainerGap(50, Short.MAX_VALUE))
        );

        videoFrame.setTitle("Reprodutor de vÃ­deo");
        videoFrame.setAlwaysOnTop(true);
        videoFrame.setLocation(new java.awt.Point(370, 150));
        videoFrame.setMinimumSize(new java.awt.Dimension(800, 500));
        videoFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                videoFrameWindowClosing(evt);
            }
        });

        playVideo.setBackground(new java.awt.Color(204, 204, 255));
        playVideo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/squarePlayVideo.png"))); // NOI18N
        playVideo.setBorder(null);
        playVideo.setBorderPainted(false);
        playVideo.setContentAreaFilled(false);
        playVideo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playVideo.setRequestFocusEnabled(false);
        playVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playVideoActionPerformed(evt);
            }
        });

        pauseVideo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/squarePauseVideo.png"))); // NOI18N
        pauseVideo.setBorderPainted(false);
        pauseVideo.setContentAreaFilled(false);
        pauseVideo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pauseVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseVideoActionPerformed(evt);
            }
        });

        stopVideo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/squareStopVideo.png"))); // NOI18N
        stopVideo.setBorderPainted(false);
        stopVideo.setContentAreaFilled(false);
        stopVideo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stopVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopVideoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout videoFrameLayout = new javax.swing.GroupLayout(videoFrame.getContentPane());
        videoFrame.getContentPane().setLayout(videoFrameLayout);
        videoFrameLayout.setHorizontalGroup(
                videoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(videoFrameLayout.createSequentialGroup()
                                .addGap(305, 305, 305)
                                .addComponent(playVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pauseVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(stopVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 502, Short.MAX_VALUE))
        );
        videoFrameLayout.setVerticalGroup(
                videoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, videoFrameLayout.createSequentialGroup()
                                .addContainerGap(386, Short.MAX_VALUE)
                                .addGroup(videoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(stopVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(videoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(pauseVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(playVideo)))
                                .addGap(18, 18, 18))
        );

        altCategoria.setAlwaysOnTop(true);
        altCategoria.setLocation(new java.awt.Point(580, 270));
        altCategoria.setMinimumSize(new java.awt.Dimension(350, 250));
        altCategoria.setPreferredSize(new java.awt.Dimension(350, 250));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/catChange2.png"))); // NOI18N

        catNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catNovaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout altCategoriaLayout = new javax.swing.GroupLayout(altCategoria.getContentPane());
        altCategoria.getContentPane().setLayout(altCategoriaLayout);
        altCategoriaLayout.setHorizontalGroup(
                altCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(altCategoriaLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(altCategoriaLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(catNova, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        altCategoriaLayout.setVerticalGroup(
                altCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(altCategoriaLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(catNova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(147, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MediaCenter");
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(410, 200));
        setMinimumSize(new java.awt.Dimension(750, 400));
        setPreferredSize(new java.awt.Dimension(750, 400));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("CMU Bright", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/mc_logo.png"))); // NOI18N

        playingGif1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/playSongPinkResidez.gif"))); // NOI18N
        playingGif1.setMinimumSize(new java.awt.Dimension(282, 80));
        playingGif1.setRequestFocusEnabled(false);

        play.setBackground(new java.awt.Color(204, 204, 255));
        play.setFont(new java.awt.Font("CMU Bright", 0, 10)); // NOI18N
        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pink_play.png"))); // NOI18N
        play.setToolTipText("");
        play.setBorderPainted(false);
        play.setContentAreaFilled(false);
        play.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        play.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pink_play_pressed.png"))); // NOI18N
        play.setRequestFocusEnabled(false);
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        pause.setBackground(new java.awt.Color(204, 204, 255));
        pause.setFont(new java.awt.Font("CMU Bright", 0, 10)); // NOI18N
        pause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pink_pause.png"))); // NOI18N
        pause.setToolTipText("");
        pause.setBorderPainted(false);
        pause.setContentAreaFilled(false);
        pause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pause.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pink_pause_pressed.png"))); // NOI18N
        pause.setRequestFocusEnabled(false);
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(204, 204, 255));
        next.setFont(new java.awt.Font("CMU Bright", 0, 10)); // NOI18N
        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pink_forward.png"))); // NOI18N
        next.setToolTipText("");
        next.setBorderPainted(false);
        next.setContentAreaFilled(false);
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        next.setMaximumSize(new java.awt.Dimension(108, 50));
        next.setMinimumSize(new java.awt.Dimension(108, 50));
        next.setPreferredSize(new java.awt.Dimension(108, 50));
        next.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/take2/pink_forward_pressed.png"))); // NOI18N
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
                jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 980, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
                jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 194, Short.MAX_VALUE)
        );

        mediaList.setBackground(new java.awt.Color(226, 61, 94));
        mediaList.setFont(new java.awt.Font("CMU Bright", 1, 12)); // NOI18N
        mediaList.setForeground(new java.awt.Color(255, 255, 255));
        mediaList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mediaListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(mediaList);

        playlistList.setBackground(new java.awt.Color(226, 61, 94));
        playlistList.setFont(new java.awt.Font("CMU Bright", 1, 12)); // NOI18N
        playlistList.setForeground(new java.awt.Color(255, 255, 255));
        playlistList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playlistList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(playlistList);

        termSessao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/termSessaoButton.png"))); // NOI18N
        termSessao.setBorderPainted(false);
        termSessao.setContentAreaFilled(false);
        termSessao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        termSessao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termSessaoActionPerformed(evt);
            }
        });

        nomeMusica.setFont(new java.awt.Font("CMU Bright", 1, 18)); // NOI18N
        nomeMusica.setToolTipText("");
        nomeMusica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        uploadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/upload.png"))); // NOI18N
        uploadButton.setBorderPainted(false);
        uploadButton.setContentAreaFilled(false);
        uploadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        altCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/altCat.png"))); // NOI18N
        altCat.setBorderPainted(false);
        altCat.setContentAreaFilled(false);
        altCat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        altCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(22, 22, 22))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(altCat)
                                                                .addGap(18, 18, 18)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(catName)
                                                                        .addComponent(nomeMusica)
                                                                        .addComponent(artName))
                                                                .addGap(54, 54, 54))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(playingGif1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(870, 870, 870)
                                                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(termSessao, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(61, 61, 61)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(termSessao))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(nomeMusica)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(catName)
                                                                .addGap(29, 29, 29)
                                                                .addComponent(artName))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(altCat)
                                                                .addGap(5, 5, 5)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGap(95, 95, 95)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(22, 22, 22)
                                                                .addComponent(playingGif1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>


    private void nextActionPerformed(java.awt.event.ActionEvent evt) {
        this.clip.stop();
        this.clipTimePosition = 0;
        this.playlistPos++;
        if(playlistPos <= 15){

            String linkMedia = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getLink();
            this.musicaAtual = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getNome();
            this.mediaList.setSelectedIndex(this.playlistPos);
            String nomeM = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getNome();
            nomeMusica.setText(nomeM);
            String nomeC = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getCat();
            catName.setText(nomeC);
            String nomeA = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getArtista();
            artName.setText(nomeA);
            playMedia(linkMedia);
        }
        else{
            this.playlistPos = 0;
            String linkMedia = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getLink();
            this.mediaList.setSelectedIndex(this.playlistPos);
            String nomeM = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getNome();
            nomeMusica.setText(nomeM);
            String nomeC = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getCat();
            catName.setText(nomeC);
            String nomeA = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getArtista();
            artName.setText(nomeA);
            playMedia(linkMedia);
            //this.musicaAtual = this.playlist1.getListaMediaPlaylist().get(this.playlistPos).getNome();
            //this.catAtual = this.playlist1.getListaMediaPlaylist().get(this.playlistPos).getCat();
        }
    }

    private void playActionPerformed(java.awt.event.ActionEvent evt) {
        //while(this.playlistPos <= 3){
        //-----
        //-----

        String linkMedia = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getLink();
        //this.musicaAtual = "Olaaaaa

        playMedia(linkMedia);

        playingGif1.setVisible(true);


        //this.musicaAtual = this.playlist1.getListaMediaPlaylist().get(this.playlistPos).getNome();
        //this.catAtual = this.playlist1.getListaMediaPlaylist().get(this.playlistPos).getCat();
        //}
    }

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {
        pauseMedia();
        playingGif1.setVisible(false);
    }

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {

        loginWindow.setVisible(true);
        initialWindow.setVisible(false);
        mediaList.setVisible(false);
    }

    private void loginButtonMousePressed(java.awt.event.MouseEvent evt) {

    }

    private void loginButtonMouseReleased(java.awt.event.MouseEvent evt) {

    }

    private void videoFrameWindowClosing(java.awt.event.WindowEvent evt) {
        stopVideo();
        this.mediaList.setSelectedIndex(this.playlistPos);

    }

    private void pauseVideoActionPerformed(java.awt.event.ActionEvent evt) {
        this.playerAtual.stop();
    }

    private void stopVideoActionPerformed(java.awt.event.ActionEvent evt) {
        videoFrame.setVisible(false);
        stopVideo();
        this.mediaList.setSelectedIndex(this.playlistPos);
    }

    private void playVideoActionPerformed(java.awt.event.ActionEvent evt) {
        this.playerAtual.start();
    }

    private void initialWindowWindowOpened(java.awt.event.WindowEvent evt) {
        this.setVisible(false);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        initialWindow.setVisible(false);
        menuAdm.setVisible(true);
    }

    private void backFromLoginActionPerformed(java.awt.event.ActionEvent evt) {
        loginWindow.setVisible(false);
        initialWindow.setVisible(true);
    }

    private void backFromAdmActionPerformed(java.awt.event.ActionEvent evt) {
        menuAdm.setVisible(false);
        initialWindow.setVisible(true);
    }

    private void entrarComoConvidadoActionPerformed(java.awt.event.ActionEvent evt) {
        //neste momento estÃ¡ para ir para o player Normalmente
        initialWindow.setVisible(false);
        this.setVisible(true);
        playlistList.setVisible(false);
    }

    private void passInputKeyPressed(java.awt.event.KeyEvent evt) {
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String passText = new String(passInput.getPassword());
            String emailText = userInput.getText();
            Utilizador user = model.entraUtilizador(emailText,passText);

            if(user!=null){
                loginWindow.setVisible(false);
                this.listData.removeAllElements();
                this.userAtual=model.getUser(emailText);
                this.idUtilizadorAtual = emailText;
                int count1;
                this.lPlayList=model.getPlaylist(emailText);
                int sizeOf = lPlayList.size();
                //System.out.println(sizeOf);
                for(count1=0 ; count1 < sizeOf ; count1++){
                    String n = lPlayList.get(count1).getNome();
                    //System.out.println(n);
                    this.listData.addElement(n);
                }

                playlistList.setListData(this.listData);

                this.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(null,"AutenticaÃ§Ã£o errada.");
            }
        }
    }

    private void passInputActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void playlistListMouseClicked(java.awt.event.MouseEvent evt) {
        int index = playlistList.locationToIndex(evt.getPoint());
        //System.out.println(index);
        int pos = index ;
        this.playlistAtual = lPlayList.get(pos);

        Vector listData2 = new Vector();

        int count2;
        int sizeOf = this.playlistAtual.getListaMediaPlaylist().size();
        //  System.out.println("ola, o tamanho Ã© " + sizeOf);
        for(count2=0 ; count2 < sizeOf; count2++){
            String nomeMusica = this.playlistAtual.getListaMediaPlaylist().get(count2).getNome();
            System.out.println(nomeMusica);
            listData2.addElement(nomeMusica);
        }

        mediaList.setListData(listData2);

        //this.playlistAtual = user1.getListaPlaylists().get(1);
        //System.out.println(this.playlistAtual.getNome());
        //this.musicList =
        mediaList.setVisible(true);
        //playlistList.setVisible(false);

    }

    private void mediaListMouseClicked(java.awt.event.MouseEvent evt) {
        int index = mediaList.locationToIndex(evt.getPoint());
        //System.out.println(index);
        this.playlistPos = index;
        altCat.setVisible(true);
        if(this.clip!=null){
            String linkMedia = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getLink();
            //this.musicaAtual = "Olaaaaa";
            this.clip.stop();
            //this.playerAtual.close();
            String nomeM = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getNome();
            nomeMusica.setText(nomeM);
            String nomeC = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getCat();
            catName.setText(nomeC);
            String nomeA = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getArtista();
            artName.setText(nomeA);
            playingGif1.setVisible(true);
            playMedia(linkMedia);
        }
        else{
            String linkMedia = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getLink();
            //this.musicaAtual = "Olaaaaa";
            String nomeM = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getNome();
            nomeMusica.setText(nomeM);
            String nomeC = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getCat();
            catName.setText(nomeC);
            String nomeA = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getArtista();
            artName.setText(nomeA);
            playingGif1.setVisible(true);

            playMedia(linkMedia);
        }
    }

    private void termSessaoActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
        initialWindow.setVisible(true);
        altCat.setVisible(false);
        //por o utilizador a null
        this.clip.stop();
    }

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void altCatActionPerformed(java.awt.event.ActionEvent evt) {
        altCategoria.setVisible(true);
    }

    private void catNovaActionPerformed(java.awt.event.ActionEvent evt) {
        String newCat = catNova.getText();
        model.alteraCategoria(this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getNome(),newCat,idUtilizadorAtual);
        catName.setText(newCat);
        this.lPlayList=model.getPlaylist(this.idUtilizadorAtual);

        loginWindow.setVisible(false);
        this.listData.removeAllElements();
        this.userAtual=model.getUser(idUtilizadorAtual);
        int count1;
        this.lPlayList=model.getPlaylist(idUtilizadorAtual);
        int sizeOf = lPlayList.size();
        //System.out.println(sizeOf);
        for(count1=0 ; count1 < sizeOf ; count1++){
            String n = lPlayList.get(count1).getNome();
            //System.out.println(n);
            this.listData.addElement(n);
        }

        playlistList.setListData(this.listData);


        altCategoria.setVisible(false);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton altCat;
    private javax.swing.JFrame altCategoria;
    private javax.swing.JLabel artName;
    private javax.swing.JButton backFromAdm;
    private javax.swing.JButton backFromLogin;
    private javax.swing.JLabel catName;
    private javax.swing.JTextField catNova;
    private javax.swing.JLabel criar_conta_button;
    private javax.swing.JButton entrarComoConvidado;
    private javax.swing.JFrame initialWindow;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton loginButton;
    private javax.swing.JDialog loginWindow;
    private javax.swing.JList<String> mediaList;
    private javax.swing.JFrame menuAdm;
    private javax.swing.JButton next;
    private javax.swing.JLabel nomeMusica;
    private javax.swing.JPasswordField passInput;
    private javax.swing.JLabel password_label;
    private javax.swing.JButton pause;
    private javax.swing.JButton pauseVideo;
    private javax.swing.JButton play;
    private javax.swing.JButton playVideo;
    private javax.swing.JLabel playerAdmButton;
    private javax.swing.JLabel playingGif1;
    private javax.swing.JList<String> playlistList;
    private javax.swing.JButton stopVideo;
    private javax.swing.JButton termSessao;
    private javax.swing.JButton uploadButton;
    private javax.swing.JTextField userInput;
    private javax.swing.JLabel username_label;
    private javax.swing.JFrame videoFrame;
    private javax.swing.JLabel welcome_title;
    // End of variables declaration

    /**
     * Creates new form App
     */
    public Take2() {
        /*TEST MEDIA, PLAYLIST AND USER*/
        /*
        Media m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15 = new Media();
        m0 = new Media();
        m0.setIdMedia(0);
        m0.setLink("seeYouAgain.wav");
        m0.setNome("See You Again");
        m0.setCat("Hip Hop");
        m0.setArtista("Tyler, The Creator");
        //----
        m1 = new Media();
        m1.setIdMedia(1);
        m1.setLink("zombie.wav");
        m1.setNome("Zombie");
        m1.setCat("Rock");
        m1.setArtista("The Cranberries");
        //----
        m2 = new Media();
        m2.setIdMedia(2);
        m2.setLink("avengers.mov");
        m2.setNome("Avengers");
        m2.setCat("Trailer");
        m2.setArtista("Avengers");
        //----
        m3 = new Media();
        m3.setIdMedia(3);
        m3.setLink("summerOf69.wav");
        m3.setNome("Summer of 69");
        m3.setCat("Rock");
        m3.setArtista("Bryan Adams");
        //----
        m4 = new Media();
        m4.setIdMedia(4);
        m4.setLink("theLess.wav");
        m4.setNome("The Less I Know The Better");
        m4.setCat("Rock");
        m4.setArtista("Tame Impala");
        //----
        m5 = new Media();
        m5.setIdMedia(5);
        m5.setLink("sevenNation.wav");
        m5.setNome("Seven Nation Army");
        m5.setCat("Rock");
        m5.setArtista("The White Stripes");
        //----
        m6 = new Media();
        m6.setIdMedia(6);
        m6.setLink("otherside.wav");
        m6.setNome("Otherside");
        m6.setCat("Rock");
        m6.setArtista("Red Hot Chili Peppers");
        //----
        m7 = new Media();
        m7.setIdMedia(7);
        m7.setLink("myGeneration.wav");
        m7.setNome("My Generation");
        m7.setCat("Rock");
        m7.setArtista("The Who");
        //----
        m8 = new Media();
        m8.setIdMedia(8);
        m8.setLink("americanBoy.wav");
        m8.setNome("American Boy");
        m8.setCat("R&B");
        m8.setArtista("Estelle");
        //----
        m9 = new Media();
        m9.setIdMedia(9);
        m9.setLink("iKissed.wav");
        m9.setNome("I Kissed a Girl");
        m9.setCat("Pop");
        m9.setArtista("Katy Perry");
        //----
        m10 = new Media();
        m10.setIdMedia(10);
        m10.setLink("flyAway.wav");
        m10.setNome("Fly Away");
        m10.setCat("Pop");
        m10.setArtista("Lenny Kravitz");
        //----
        m11 = new Media();
        m11.setIdMedia(11);
        m11.setLink("creep.wav");
        m11.setNome("Creep");
        m11.setCat("Rock");
        m11.setArtista("Radiohead");
        //----
        m12 = new Media();
        m12.setIdMedia(12);
        m12.setLink("bringMeToLife.wav");
        m12.setNome("Bring Me To Life");
        m12.setCat("Rock");
        m12.setArtista("Evanescence");
        //----
        m13 = new Media();
        m13.setIdMedia(13);
        m13.setLink("basketCase.wav");
        m13.setNome("Basket Case");
        m13.setCat("Rock");
        m13.setArtista("Green Day");
        //----
        m14 = new Media();
        m14.setIdMedia(14);
        m14.setLink("withoutMe.wav");
        m14.setNome("Without Me");
        m14.setCat("Pop");
        m14.setArtista("Halsey");
        //----
        m15 = new Media();
        m15.setIdMedia(15);
        m15.setLink("useSomebody.wav");
        m15.setNome("Use Somebody");
        m15.setCat("Rock");
        m15.setArtista("Kings Of Leon");

        Playlist playlist1 = new Playlist().clone();
        playlist1.setNome("Mood");
        HashMap<Integer,Media> pl1 = new HashMap<Integer,Media>();
        pl1.put(0,m0);
        pl1.put(1,m1);
        pl1.put(2,m2);
        pl1.put(3,m3);
        pl1.put(4,m4);
        pl1.put(5,m5);
        pl1.put(6,m6);
        pl1.put(7,m7);
        pl1.put(8,m8);
        pl1.put(9,m9);
        pl1.put(10,m10);
        pl1.put(11,m11);
        pl1.put(12,m12);
        pl1.put(13,m13);
        pl1.put(14,m14);
        pl1.put(15,m15);
        playlist1.setListaMediaPlaylist(pl1);

        Playlist playlist2 = new Playlist().clone();
        playlist2.setNome("Rock");
        HashMap<Integer,Media> pl2 = new HashMap<Integer,Media>();
        playlist2.setListaMediaPlaylist(pl2);

        Playlist playlist3 = new Playlist().clone();
        playlist3.setNome("Correr");
        HashMap<Integer,Media> pl3 = new HashMap<Integer,Media>();
        playlist3.setListaMediaPlaylist(pl3);

        this.playlistAtual = playlist1;

        this.user1 = new Utilizador();
        this.user1.setNome("Maria Almeida");
        //this.user1.setEmail("mariaalmeida@gmail.com");
        this.user1.setEmail("j");
        //this.user1.setPass("maria");
        this.user1.setPass("j");
        HashMap<Integer,Playlist> plUser1 = new HashMap<Integer,Playlist>();
        plUser1.put(1,playlist1);
        plUser1.put(2,playlist2);
        plUser1.put(3,playlist3);
        this.user1.setListaPlaylists(plUser1);

        /*int count = 0;
        while(count < this.user1.getListaPlaylists().size()){
            String nomeDaPl = this.user1.getListaPlaylists().get(count).getNome();
            System.out.println(nomeDaPl);
            this.listData.addElement(nomeDaPl);
            count++;
        }*/

        /*this.listData.addElement("Joana");
        this.listData.addElement("Gomes");
        this.listData.addElement("like");
        this.listData.addElement("bananas");

        this.musicList.setListData(this.listData);*/


        /*
        Collection<Media> playlistMedias = new ArrayList<Media>(); //collection das medias da playlist atual
        playlistMedias = this.playlistAtual.getListaMediaPlaylist().values();
        int j=0;
        for(Media m : playlistMedias) {
            this.musicasArray[j] = m.getNome();
            j++;
        }*/

        //this.playlistAtual = playlist1;

        /*
        int count;
            int sizeOfPl = this.user1.getListaPlaylists().size();
            //System.out.println("o size Ã©" + sizeOfPl);
            for(count=1 ; count < (sizeOfPl+1) ; count++){
                String nomePlay = this.user1.getListaPlaylists().get(count).getNome();
                System.out.println("ola tudo bem " + nomePlay);
                this.listData.addElement(nomePlay);
            }*/

            /*this.listData.addElement("Joana");
            this.listData.addElement("Gomes");
            this.listData.addElement("like");
            this.listData.addElement("bananas");*/

        //this.musicList.setListData(this.listData);

        initComponents();

        initialWindow.setVisible(true);
        playingGif1.setVisible(false);
        altCat.setVisible(false);


    }

    public void playMedia(String filepath){

        if(filepath.equals("avengers.mov")){

            videoFrame.setVisible(true);

            try{

                URL mediaURL = new File("avengers.mov").toURI().toURL();
                //create the media player with the media url
                Player mediaPlayer = Manager.createRealizedPlayer(new MediaLocator(mediaURL));
                //MediaView mediaView = new MediaView(player);
                //get components for video and playback controls
                Component video = mediaPlayer.getVisualComponent();

                //video.setBounds((videoFrame.getWidth() /2)+(860/3), (videoFrame.getHeight() /2), 720, 480);
                video.setBounds(0, 0 , 800, 500);



                if (video != null) {
                    //videoFrame.add(video, BorderLayout.CENTER);
                    videoFrame.add(video);
                }

                this.playerAtual = mediaPlayer;

                this.playerAtual.start();
            }
            catch(IOException | NoPlayerException | CannotRealizeException e ){
                System.out.println(e.getMessage());
            }


        }
        else{
            try {
                File media = new File(filepath);

                if ((media.exists()) && (this.clipTimePosition==0)){
                    AudioInputStream mediaInput = AudioSystem.getAudioInputStream(media);
                    //Se fosse com URL:
                    //InputStream url = new URL(filepath).openStream();
                    //AudioInputStream mediaInput = AudioSystem.getAudioInputStream(url);
                    Clip clip = AudioSystem.getClip();
                    this.clip = clip;
                    this.clip.open(mediaInput);
                    this.clip.start();
                    this.clip.loop(Clip.LOOP_CONTINUOUSLY);
                }
                else if((media.exists()) && (this.clipTimePosition!=0)){
                    //this.clip.setMicrosecondPosition(this.clipTimePosition);
                    this.clip.start();
                }
                else {
                    System.out.println("Can't found file");
                }

            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }

    public void pauseMedia(){
        long clipTimePosition = this.clip.getMicrosecondPosition();
        this.clipTimePosition = clipTimePosition;
        this.clip.stop();
    }

    public void changeMusic(){

    }

    public void stopVideo(){
        this.playerAtual.stop();
        this.playerAtual.close();
        this.playlistPos++;
        String linkMedia = this.playlistAtual.getListaMediaPlaylist().get(this.playlistPos).getLink();
        playMedia(linkMedia);
    }

    /*
    public static void pauseMusic(){
        long clipTimePosition = clip.getMicrosecondPosition();
        clip.stop();
    }
    */


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*Media m0 = new Media();
        m0.setIdMedia(0);
        m0.setLink("seeYouAgain.wav");
        Media m1 = new Media();
        m1.setIdMedia(1);
        m1.setLink("zombie.wav");
        Media m2 = new Media();
        m2.setIdMedia(2);
        m2.setLink("useSomebody.wav");
        Media m3 = new Media();
        m2.setIdMedia(3);
        m2.setLink("summerOf69.wav");

        Playlist playlist1 = new Playlist();
        HashMap<Integer,Media> pl1 = new HashMap<Integer,Media>();
        pl1.put(0,m0);
        pl1.put(1,m1);
        pl1.put(2,m2);
        pl1.put(3,m3);
        playlist1.setListaMediaPlaylist(pl1);*/

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Take2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Take2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Take2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Take2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
        Media m0 = new Media();
        m0.setIdMedia(0);
        m0.setLink("seeYouAgain.wav");
        Media m1 = new Media();
        m1.setIdMedia(1);
        m1.setLink("zombie.wav");
        Media m2 = new Media();
        m2.setIdMedia(2);
        m2.setLink("useSomebody.wav");
        Media m3 = new Media();
        m2.setIdMedia(3);
        m2.setLink("summerOf69.wav");

        Playlist playlist1 = new Playlist();
        HashMap<Integer,Media> pl1 = playlist1.getListaMediaPlaylist();
        pl1.put(0,m0);
        pl1.put(1,m1);
        playlist1.setListaMediaPlaylist(pl1);
        */

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Take2().setVisible(true);
            }
        });
    }

    /*public static void playMedia(String filepath){

        try {
            File media = new File(filepath);


            if (media.exists()) {
                AudioInputStream mediaInput = AudioSystem.getAudioInputStream(media);
                //Se fosse com URL:
                //InputStream url = new URL(filepath).openStream();
                //AudioInputStream mediaInput = AudioSystem.getAudioInputStream(url);
                Clip clip = AudioSystem.getClip();
                clip.open(mediaInput);
                clip.start();
                clip.loop(Clip.LOOP_CONTINUOUSLY);

               // if(getjButton2.getModel().isPressed()){
                JOptionPane.showMessageDialog(null,"Press OK to pause song.");
                long clipTimePosition = clip.getMicrosecondPosition();
                clip.stop();
                //}

                JOptionPane.showMessageDialog(null,"Press OK to resume song.");
                clip.setMicrosecondPosition(clipTimePosition);
                clip.start();

                JOptionPane.showMessageDialog(null,"Press OK to listen to the next song.");
                clip.stop();

            } else {
                System.out.println("Can't found file");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }

    }*/


}